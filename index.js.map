{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '50787945-1edbab8bb6a94afd781f3e3fd';\n\n// Ця функція повинна приймати два параметри query (пошукове слово, яке є рядком) та page (номер сторінки, яка є числом), здійснювати HTTP-запит і повертати значення властивості data з отриманої відповіді.\n\nexport async function getImagesByQuery(query, page = 1) {\n  const params = {\n    key: API_KEY,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    per_page: 15,\n    page: page,\n  };\n\n  const response = await axios(BASE_URL, { params });\n  return response.data;\n}","// Цей рядок імпортує саму бібліотеку SimpleLightbox — це JavaScript-бібліотека, яка дозволяє легко створювати ефект лайтбоксу (lightbox) для зображень. Тобто, коли користувач натискає на зображення, воно відкривається в модальному вікні з затемненим фоном, стрілками навігації, підписами тощо.\nimport SimpleLightbox from 'simplelightbox';\n\n// Цей рядок імпортує CSS-стилі, необхідні для коректного відображення лайтбоксу: стилі модального вікна, анімацій, кнопок закриття/навігації тощо.\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst gallery = document.querySelector('.gallery');\n\n// Створюємо новий екземпляр бібліотеки SimpleLightbox, яка відкриває зображення у модальному вікні (лайтбоксі), коли клікає по зображенню.\nlet lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 300,\n});\n\n// Ця функція повинна приймати масив images, створювати HTML-розмітку для галереї, додавати її в контейнер галереї та викликати метод екземпляра SimpleLightbox refresh(). Нічого не повертає.\nexport function createGallery(images) {\n  const markup = images\n    .map(\n      image => `\n      <li class=\"gallery-item\">\n        <a href=\"${image.largeImageURL}\">\n          <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" />\n        </a>\n        <div class=\"info\">\n          <p class=\"info-item\"><b>Likes</b> ${image.likes}</p>\n          <p class=\"info-item\"><b>Views</b> ${image.views}</p>\n          <p class=\"info-item\"><b>Comments</b> ${image.comments}</p>\n          <p class=\"info-item\"><b>Downloads</b> ${image.downloads}</p>\n        </div>\n      </li>\n    `\n    )\n    .join('');\n\n  gallery.insertAdjacentHTML('beforeend', markup);\n\n  // Метод lightbox.refresh(); у бібліотеці SimpleLightbox використовується для оновлення галереї після того, як у DOM були додані нові елементи зображень.\n  // Без lightbox.refresh() нові зображення просто не відкриватимуться в модальному вікні.\n  lightbox.refresh();\n}\n\n// Ця функція нічого не приймає та повинна очищати вміст контейнера галереї. Нічого не повертає.\nexport function clearGallery() {\n  gallery.innerHTML = '';\n}\n\n//  Ця функція нічого не приймає, повинна додавати клас для відображення лоадера. Нічого не повертає.\nexport function showLoader() {\n  const loader = document.querySelector('.loader');\n  loader.classList.remove('is-hidden');\n}\n\n// Ця функція нічого не приймає, повинна прибирати клас для відображення лоадера. Нічого не повертає.\nexport function hideLoader() {\n  const loader = document.querySelector('.loader');\n  loader.classList.add('is-hidden');\n}\n\nexport function showLoadMoreButton() {\n  const loadMoreBtn = document.querySelector('.load-more');\n  loadMoreBtn.classList.remove('hidden');\n}\n\nexport function hideLoadMoreButton() {\n  const loadMoreBtn = document.querySelector('.load-more');\n  loadMoreBtn.classList.add('hidden');\n}\n\n","// Цей рядок імпортує бібліотеку iziToast — це популярна JavaScript-бібліотека для створення гарних сповіщень (тостів) у вебдодатках.\nimport iziToast from 'izitoast';\n\n// Цей рядок імпортує CSS-стилі iziToast.\n// Вони потрібні, щоб зробити візуальне оформлення сповіщень відповідно до дизайну iziToast (кольори, анімації, розташування тостів тощо).\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { getImagesByQuery } from './js/pixabay-api';\nimport {\n  createGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n  showLoadMoreButton,\n  hideLoadMoreButton,    \n} from './js/render-functions';\n\nconst searchForm = document.querySelector('.form');\nconst loadMoreBtn = document.querySelector('.load-more');\n\n\nlet currentQuery = '';\nlet currentPage = 1;\nlet totalPages = 0;\n\nsearchForm.addEventListener('submit', handleSubmit);\nloadMoreBtn.addEventListener('click', handleLoadMore);\n\nasync function handleSubmit(event) {\n  event.preventDefault();\n  const query = event.target.elements.query.value.trim();\n\n  if (!query) {\n    iziToast.error({\n      message: 'Please enter a search query',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  currentQuery = query;\n  currentPage = 1;\n\n  try {\n    showLoader(); // Показуємо лоадер\n    hideLoadMoreButton(); // Приховуємо кнопку \"Load more\"\n    clearGallery(); // Очищаємо попередню галерею\n\n    const data = await getImagesByQuery(currentQuery, currentPage);\n    console.log(data);\n\n    if (data.hits.length === 0) {\n      //  Метод бібліотеки iziToast, який показує інформаційне (info) повідомлення. Якщо бекенд повертає порожній масив, це означає, що нічого підходящого не було знайдено. У такому випадку відображай повідомлення з текстом:\n      //  'Sorry, there are no images matching your search query. Please try again!'\n      iziToast.info({\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n        position: 'topRight',\n      });\n      return;\n    }\n\n    createGallery(data.hits);\n    console.log(data.hits);\n\n    totalPages = Math.ceil(data.totalHits / 15);\n    if (currentPage < totalPages) {\n      showLoadMoreButton();\n    }\n  } catch (error) {\n    iziToast.error({\n      message: 'Something went wrong. Please try again later.',\n      position: 'topRight',\n    });\n  } finally {\n    hideLoader(); // Ховаємо лоадер, навіть при помилці\n    \n  }\n  event.target.reset();\n}\n\nasync function handleLoadMore() {\n  currentPage += 1;\n  \n\n  try {\n    showLoader(); // Показуємо лоадер\n    hideLoadMoreButton(); // Приховуємо кнопку \"Load more\"\n\n    const data = await getImagesByQuery(currentQuery, currentPage);\n    createGallery(data.hits);\n\n    // Знаходимо перший елемент на сторінці з класом gallery-item.\n    const galleryItem = document.querySelector('.gallery-item');\n\n    //     Отримуємо розміри та позицію елемента відносно вікна перегляду.\n    // Беремо тільки висоту (height).\n    const { height } = galleryItem.getBoundingClientRect();\n    window.scrollBy({\n      top: height * 2, // Прокручує сторінку вниз на величину height * 200 пікселів з плавною анімацією \"smooth\":\n      behavior: 'smooth',\n    });\n\n    const totalPages = Math.ceil(data.totalHits / 15);\n    if (currentPage >= totalPages) {\n      hideLoadMoreButton(); // Приховуємо кнопку \"Load more\"\n\n      iziToast.info({\n        message: \"We're sorry, but you've reached the end of search results.\",\n        position: 'topRight',\n      });\n    } else {\n      showLoadMoreButton();\n    }\n  } catch (error) {\n    iziToast.error({\n      message: 'Something went wrong. Please try again later.',\n      position: 'topRight',\n    });\n  } finally {\n    hideLoader(); // Ховаємо лоадер\n    \n  }\n}\n"],"names":["BASE_URL","API_KEY","getImagesByQuery","query","page","axios","gallery","lightbox","SimpleLightbox","createGallery","images","markup","image","clearGallery","showLoader","hideLoader","showLoadMoreButton","hideLoadMoreButton","searchForm","loadMoreBtn","currentQuery","currentPage","totalPages","handleSubmit","handleLoadMore","event","iziToast","data","galleryItem","height"],"mappings":"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"}